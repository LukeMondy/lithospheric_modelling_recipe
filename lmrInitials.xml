<?xml version="1.0" encoding="UTF-8"?>
<StGermainData xmlns="http://www.vpac.org/StGermain/XML_IO_Handler/Jun2003">
    
    
    <list name="plugins" mergeType="merge">
        <!-- If you have thermally equilibrated your model, you need to tell Underworld where
             to find the thermal information using the following struct -->
        <struct>
            <param name="Type">Underworld_HDF5ConditionFunction</param>
            <param name="FeVariableHDF5Filename"> /home/luke/bigmama/tectonics/lmr-src/initial-condition_208x96x0_laterally_homog/TemperatureField.04747.h5 </param>
            <param name="MeshHDF5Filename"> /home/luke/bigmama/tectonics/lmr-src/initial-condition_208x96x0_laterally_homog/Mesh.linearMesh.04747.h5 </param>
            <param name="TargetFeVariable"> TemperatureField </param>
            <param name="Partitioned"> True </param>
        </struct>
    </list>
    
    <!-- If you do NOT want to use a thermally equilibrated model, you can use a user-defined 
         geotherm. Look inside lmrThermalEquilibration.xml for an example. 
         If you just want a model with a thermal anomaly in it, it is recommended to thermally
         equilibrate your model, then apply a temperature shape over the top (an example is 
         shown below). -->
    
    <struct name="temperatureICs">
        <param name="type">CompositeVC</param>
        <list name="vcList">
            <!-- Note: each struct is applied in order. If you put a MeshShapeVC first, followed by 
                 a AllNodesVC, the MeshShapeVC will be overwritten. -->
            <struct>
                <param name="type"> AllNodesVC </param>
                <list name="variables">
                    <struct>
                        <param name="name"> temperature </param>
                        <param name="type"> func </param>
                        <param name="value"> HDF5ConditionFunction </param>
                    </struct>
                </list>
            </struct>
            
            <!-- Note: Using a MeshShapeVC type can force a temperature in a particular area.
                 For example: 
                    <struct>
                        <param name="type"> MeshShapeVC </param>
                        <param name="Shape"> airShape </param>
                        <list name="variables">
                            <struct>
                                <param name="name">temperature</param>
                                <param name="type">double</param>
                                <param name="value" units="K">  273.15 </param>
                            </struct>
                        </list>
                    </struct>
            -->
            
        </list>
    </struct>
    
</StGermainData>
